<?php
/**
 * Copyright (c) 2022. All rights reserved.
 * @author: Volodymyr Hryvinskyi <mailto:volodymyr@hryvinskyi.com>
 */

declare(strict_types=1);

/**
 * @var $block \Magento\Framework\View\Element\Template
 * @var $configViewModel \Hryvinskyi\PageSpeedCssExtremeLazyLoadFrontendUi\ViewModel\ConfigViewModel
 */

$configViewModel = $block->getData('configViewModel');
?>
<script data-ignore-extreme-lazy-load data-pagespeed-ignore-merge>
    (() => {
        function callback () {
            console.log('Extreme Lazy Load CSS is enabled');

            document.removeEventListener('DOMContentLoaded', callback);
            document.removeEventListener('LazyScriptsLoaded', callback);

            const links = document.querySelectorAll('link[rel="lazyload-css"]');
            <?php if ($configViewModel->getConfig()->isTimeOutEnabled() === true) : ?>
            let timeOut;
            timeOut = setTimeout(initCss, <?= $configViewModel->getConfig()->getTimeOut() ?>);
            <?php endif; ?>
            <?php foreach ($configViewModel->getConfig()->getDelayEvents() as $delayEvent): ?>
            document.addEventListener('<?php echo $delayEvent ?>', initCssOnEvent);
            <?php endforeach; ?>

            function initCssOnEvent(event) {
                event.currentTarget.removeEventListener(event.type, initCssOnEvent);
                <?php if ($configViewModel->getConfig()->isTimeOutEnabled() === true) : ?>
                clearTimeout(timeOut);
                <?php endif; ?>
                initCss();
            }

            function initCss() {
                if (links.length === 0) {
                    return;
                }

                links.forEach(function (element) {
                    if (element.getAttribute('data-lazy-source') !== null) {
                        element.setAttribute('rel', 'stylesheet');
                        element.setAttribute('href', element.getAttribute('data-lazy-source'));
                        element.removeAttribute('lazyload-css');
                        element.removeAttribute('data-lazy-source');
                    }
                });
            }
        };

        if(document.readyState !== 'loading') {
            callback();
        } else {
            document.addEventListener('DOMContentLoaded', callback);
            document.addEventListener('LazyScriptsLoaded', callback);
        }
    })();
</script>
