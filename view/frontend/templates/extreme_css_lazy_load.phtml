<?php
/**
 * Copyright (c) 2022-2025. All rights reserved.
 * @author: Volodymyr Hryvinskyi <mailto:volodymyr@hryvinskyi.com>
 */

declare(strict_types=1);

/**
 * @var $block \Magento\Framework\View\Element\Template
 * @var $configViewModel \Hryvinskyi\PageSpeedCssExtremeLazyLoadFrontendUi\ViewModel\ConfigViewModel
 * @var $secureRenderer \Magento\Framework\View\Helper\SecureHtmlRenderer
 */

$configViewModel = $block->getData('configViewModel');

$timeOutContent = '';
$timeOutContent2 = '';
if ($configViewModel->getConfig()->isTimeOutEnabled() === true) {
    $timeOutContent = "let timeOut;
        timeOut = setTimeout(initCss, {$configViewModel->getConfig()->getTimeOut()});";
    $timeOutContent2 = 'clearTimeout(timeOut);';
}

$delayEventContent = implode('', array_map(static function($delayEvent): string {
    return 'document.addEventListener(\'' . $delayEvent . '\', initCssOnEvent);';
}, $configViewModel->getConfig()->getDelayEvents()));

$scriptContent = <<<JS
(() => {
    function callback () {
        console.log('Extreme Lazy Load CSS is enabled');

        document.removeEventListener('DOMContentLoaded', callback);
        document.removeEventListener('LazyScriptsLoaded', callback);

        const links = document.querySelectorAll('link[rel="lazyload-css"]');
        {$timeOutContent}
        {$delayEventContent}

        function initCssOnEvent(event) {
            event.currentTarget.removeEventListener(event.type, initCssOnEvent);
            {$timeOutContent2}
            initCss();
        }

        function initCss() {
            if (links.length === 0) {
                return;
            }

            links.forEach(function (element) {
                if (element.getAttribute('data-lazy-source') !== null) {
                    element.setAttribute('rel', 'stylesheet');
                    element.setAttribute('href', element.getAttribute('data-lazy-source'));
                    element.removeAttribute('lazyload-css');
                    element.removeAttribute('data-lazy-source');
                }
            });
        }
    }

    if(document.readyState !== 'loading') {
        callback();
    } else {
        document.addEventListener('DOMContentLoaded', callback);
        document.addEventListener('LazyScriptsLoaded', callback);
    }
})();
JS;

echo $secureRenderer->renderTag(
    'script',
    [
        'data-ignore-extreme-lazy-load' => null,
        'data-pagespeed-ignore-merge' => null,
    ],
    $scriptContent,
    false
);
